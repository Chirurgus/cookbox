# Generated by Django 2.1.2 on 2019-02-26 18:55

from django.db import migrations

from django.core.exceptions import ObjectDoesNotExist


def make_tags_unique(apps, schema_editor):
    """
    For every unique tag name creates a new tag,
    that references all the recipes with that tag name.
    """
    Tag = apps.get_model("cookbox_core", "Tag")

    unique_tag_names = {tag.name for tag in Tag.objects.all()}

    for tag_name in unique_tag_names:
        # Create one (unique) tag with this name
        new_tag = Tag(name=tag_name)
        # Save it to get an id
        new_tag.save()

        # Go though all the tags with same name
        for tag in Tag.objects.filter(name=tag_name):
            # Do not do anything to the new tag
            if tag.id == new_tag.id:
                continue

            # Some tags reference recipes that no longer exist
            try:
                # Tags can have null recipe since migration 0006
                if not tag.recipe is None:
                    # Add the recipes to the new tag
                    new_tag.recipes.add(tag.recipe)
            except ObjectDoesNotExist:
                # In case of ObjectDoesNotExist warn and do nothing
                print(
                    "Warning: The following tag did not have a recipe associated with it:"
                )
                print(tag.name)
                print("This tag is now integrated into a new one.")

            # Remove the old tag
            tag.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("cookbox_core", "0006_auto_20190226_1954"),
    ]

    operations = [migrations.RunPython(make_tags_unique)]
